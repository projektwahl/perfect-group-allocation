cargo-features = ["edition2024"]

[package]
name = "perfect-group-allocation"
version = "0.1.0"
edition = "2024"
license = "AGPL-3.0-or-later"
repository = "https://github.com/projektwahl/perfect-group-allocation"
description = "Allocate people to groups according to their preferences while honoring specified restrictions."
keywords = ["web", "management", "service"]
categories = ["web-programming"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
futures-util = "0.3"
good_lp = { default-features = false, version = "1", features = [ "coin_cbc" ] }
itertools = { default-features = false, version = "0.12", features = [ "use_alloc", "use_std" ] }
tokio = { version = "1", features = ["full", "tracing"] }
tracing = { version = "0.1", features = ["release_max_level_off"] }
log = { version = "0.4", features = ["release_max_level_off"] }
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
sea-orm = { version = "0.12", features = [ "sqlx-postgres", "runtime-tokio-rustls", "macros" ] }
sea-orm-migration = "0.12"
axum = { version = "0.7", features = [ "http2", "macros", "multipart", "tracing" ] }
axum-server = { version = "0.6", features = ["tls-rustls"] }
tokio-rustls = "0.25"
hyper = { version = "1", features = ["full"] }
tower = { version = "0.4", features = ["full"] }
tower-http = { version = "0.5", features = ["full"] }
http-body = "1"
tokio-util = { version = "0.7", features = ["io"] }
anyhow = "1"
sqlx = "0.7"
serde_json = "1"
serde = { version = "1", features = ["derive"] }
axum-extra = { version = "0.9", features = ["cookie", "cookie-private", "cookie-signed", "typed-header"] }
rand = "0.8"
lightningcss = "1.0.0-alpha.49"
parcel_sourcemap = "2"
thiserror = "1"
openidconnect = "3"
oauth2 = "4"
reqwest = { version = "0.11", features = ["json"] }
once_cell = "1"
chrono = "0.4"
miniserde = "0.1"
http = "1"
console-subscriber = "0.2"
tokio-metrics = { version = "0.3" }
zero-cost-templating = { git = "https://github.com/mohe2015/zero-cost-templating.git", branch = "work" }
bytes = "1"

[profile.release-with-debug]
inherits = "release"
debug = true

[lints.rust]
unsafe_code = "forbid"
let_underscore = "warn"
nonstandard_style = "warn"
unused = "warn"
unused_must_use = "deny"

[lints.clippy]
pedantic = "warn"
nursery = "warn"
cargo = "warn"
alloc_instead_of_core = "warn"
allow_attributes = "warn"
allow_attributes_without_reason = "warn"
as_conversions = "warn"
as_underscore = "warn"
assertions_on_result_states = "warn"
clone_on_ref_ptr = "warn"
create_dir = "warn"
dbg_macro = "warn"
decimal_literal_representation = "warn"
default_numeric_fallback = "warn"
deref_by_slicing = "warn"
disallowed_script_idents = "warn"
else_if_without_else = "warn"
empty_drop = "warn"
empty_structs_with_brackets = "warn"
error_impl_error = "warn"
exit = "warn"
expect_used = "warn"
filetype_is_file = "warn"
float_arithmetic = "warn"
float_cmp_const = "warn"
fn_to_numeric_cast_any = "warn"
format_push_string = "warn"
if_then_some_else_none = "warn"
integer_division = "warn"
large_include_file = "warn"
let_underscore_must_use = "warn"
let_underscore_untyped = "warn"
lossy_float_literal = "warn"
map_err_ignore = "warn"
mem_forget = "warn"
min_ident_chars = "warn"
missing_assert_message = "warn"
missing_asserts_for_indexing = "warn"
mixed_read_write_in_expression = "warn"
modulo_arithmetic = "warn"
multiple_inherent_impl = "warn"
multiple_unsafe_ops_per_block = "warn"
mutex_atomic = "warn"
needless_raw_strings = "warn"
panic = "warn"
panic_in_result_fn = "warn"
partial_pub_fields = "warn"
pattern_type_mismatch = "warn"
print_stderr = "warn"
rc_buffer = "warn"
rc_mutex = "warn"
redundant_type_annotations = "warn"
ref_patterns = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_name_method = "warn"
semicolon_inside_block = "warn"
std_instead_of_alloc = "warn"
std_instead_of_core = "warn"
str_to_string = "warn"
string_lit_chars_any = "warn"
string_slice = "warn"
string_to_string = "warn"
suspicious_xor_used_as_pow = "warn"
tests_outside_test_module = "warn"
todo = "warn"
try_err = "warn"
unimplemented = "warn"
unnecessary_self_imports = "warn"
unneeded_field_pattern = "warn"
unreachable = "warn"
unseparated_literal_suffix = "warn"
unwrap_in_result = "warn"
verbose_file_reads = "warn"
wildcard_enum_match_arm = "warn"

unwrap_used = "allow"
mod_module_files = "allow"
print_stdout = "allow"
arithmetic_side_effects = "allow"
shadow_unrelated = "allow"
indexing_slicing = "allow"
impl_trait_in_params = "allow"
use_debug = "allow"
