{{- if .Values.keycloak.enable -}}
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "perfect-group-allocation.name" . }}-keycloak"
  annotations:
    io.podman.annotations.infra.name: "{{ include "perfect-group-allocation.name" . }}-keycloak-infra"
spec:
  restartPolicy: OnFailure
  securityContext:
    sysctls:
      - name: net.ipv4.ip_unprivileged_port_start
        value: "0"
  containers:
    - name: keycloak
      image: keycloak:NOTFOUND
      env:
        - name: KC_DB_URL
          value: jdbc:postgresql://${KC_HOSTNAME}-postgres/postgres
        - name: KC_DB_USERNAME
          value: postgres
        - name: KC_DB_PASSWORD
          value: keycloak-bestpassword # FIXME don't put password here, also configure from secret
        - name: KC_HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: KC_HTTPS_PORT
          value: "443"
        # https://www.keycloak.org/server/enabletls
        # TODO https://www.keycloak.org/server/vault
        - name: KC_HTTPS_CERTIFICATE_FILE
          value: /run/secrets/tls-cert/tls.crt
        - name: KC_HTTPS_CERTIFICATE_KEY_FILE
          value: /run/secrets/tls-cert/tls.key
        - name: KEYCLOAK_ADMIN
          value: admin
        - name: KEYCLOAK_ADMIN_PASSWORD
          value: admin
      volumeMounts:
        - name: keycloak-tls-cert-volume
          mountPath: "/run/secrets/tls-cert"
          readOnly: true
        - name: root-ca
          mountPath: "/run/rootCA"
          readOnly: true
      ports:
        - containerPort: 443
      startupProbe:
        exec:
          command:
            - "curl"
            - "--fail-with-body"
            - "--insecure"
            - "https://localhost/health/started"
        periodSeconds: 3
        failureThreshold: 30
      livenessProbe:
        exec:
          command:
            - "curl"
            - "--fail-with-body"
            - "--insecure"
            - "https://localhost/health/live"
        periodSeconds: 3
      readinessProbe:
        exec:
          command:
            - "curl"
            - "--fail-with-body"
            - "--insecure"
            - "https://localhost/health/ready"
        periodSeconds: 3
      resources:
        limits:
          memory: "1Gi"
          cpu: "4"
  volumes:
    - name: keycloak-tls-cert-volume
      secret:
        secretName: "{{ include "perfect-group-allocation.name" . }}-keycloak-tls-cert"
    - name: root-ca
      configMap:
        name: "{{ include "perfect-group-allocation.name" . }}-root-ca"
---
apiVersion: v1
kind: Secret
metadata:
  name: "{{ include "perfect-group-allocation.name" . }}-keycloak-tls-cert"
type: kubernetes.io/tls
data:
  tls.crt: "{{ .Values.keycloak.cert | b64enc }}"
  tls.key: "{{ .Values.keycloak.key | b64enc}}"
{{- end }}
