apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
secretGenerator:
  - files:
      - tls.crt=keycloak.localhost.pem
      - tls.key=keycloak.localhost-key.pem
    name: keycloak-tls-cert
    type: kubernetes.io/tls
resources:
  - ./keycloak.yaml
  - ./postgres.yaml
  - ./webdriver.yaml
# podman kube generate c405e96100cc0970b2059248bb2e6eb2b3aaf469eb51a221e44d5a7195b336c4
# cd deployment/kustomize/base
# clear && kustomize build . | podman kube play --replace --publish-all - #  --build
# kustomize build . | podman kube play --down -
# https://keycloak.localhost:8443
# podman inspect keycloak-keycloak | jq '.[0].State'
# watch 'podman inspect keycloak-keycloak | jq '.[0].State' | tail -n 10'
## podman volume DANGER postgres-claim

# https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/
# https://kubernetes.io/docs/concepts/workloads/pods/
# https://kubernetes.io/docs/setup/
# https://kubernetes.io/partners/#iframe-landscape-conformance
# I think k3s or kubeadm (probably k3s because of their load balancer)
#https://kubernetes.io/docs/concepts/overview/working-with-objects/object-management/#declarative-object-configuration
# especially check firewall config
# https://docs.k3s.io/installation/requirements

# curl -sfL https://get.k3s.io | sh -
# Check for Ready node, takes ~30 seconds
# sudo k3s kubectl get node
# export KUBECONFIG=~/.kube/config
# mkdir -p ~/.kube
# sudo k3s kubectl config view --raw > "$KUBECONFIG"
# chmod 600 "$KUBECONFIG"
# kubectl get pods --all-namespaces

# kubectl diff -R -f deployment/k8s/
# kubectl apply -R -f deployment/k8s/
# kubectl config set-context --current --namespace=development
# kubectl get pods
# kubectl logs pod/postgres

# https://kubernetes.io/docs/concepts/workloads/pods/
# cilium and istio?

# https://docs.k3s.io/installation/network-options
