# https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/
# https://kubernetes.io/docs/concepts/workloads/pods/
# https://kubernetes.io/docs/setup/
# https://kubernetes.io/partners/#iframe-landscape-conformance
# I think k3s or kubeadm (probably k3s because of their load balancer)
#https://kubernetes.io/docs/concepts/overview/working-with-objects/object-management/#declarative-object-configuration
apiVersion: v1
kind: Pod
metadata:
  namespace: development
  name: postgres
spec:
  containers:
    - name: postgres
      image: postgres:16.1
      env:
        # maybe switch to mtls at some point?
        # https://kubernetes.io/docs/tasks/inject-data-application/distribute-credentials-secure/#create-a-pod-that-has-access-to-the-secret-data-through-a-volume
        - name: "POSTGRES_PASSWORD_FILE"
          value: "/etc/postgres-secret-volume/password"
      volumeMounts:
        - name: postgres-secret-volume
          mountPath: "/etc/postgres-secret-volume"
          readOnly: true
      ports:
        - containerPort: 5432
      resources:
        requests:
          memory: "512Mi"
          cpu: "1"
        limits:
          memory: "1Gi"
          cpu: "4"
  volumes:
    - name: postgres-secret-volume
      secret:
        secretName: postgres-secret
# especially check firewall config
# https://docs.k3s.io/installation/requirements

# curl -sfL https://get.k3s.io | sh -
# Check for Ready node, takes ~30 seconds
# sudo k3s kubectl get node
# export KUBECONFIG=~/.kube/config
# mkdir -p ~/.kube
# sudo k3s kubectl config view --raw > "$KUBECONFIG"
# chmod 600 "$KUBECONFIG"
# kubectl get pods --all-namespaces

# kubectl diff -R -f deployment/k8s/
# kubectl apply -R -f deployment/k8s/
# kubectl config set-context --current --namespace=development
# kubectl get pods
# kubectl logs pod/postgres

# https://kubernetes.io/docs/concepts/workloads/pods/
# cilium and istio?

# https://docs.k3s.io/installation/network-options
