name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  rust:
    #runs-on: docker
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/projektwahl/perfect-group-allocation:1
    steps:
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions/checkout@v4
      - run: lightningcss --bundle --minify --sourcemap --output-file frontend/bundle.css frontend/index.css
      - run: cargo fmt --check
      - run: cargo deny check
      - run: cargo hack clippy --workspace --feature-powerset --optional-deps --all-targets -- -D warnings
      - run: cargo hack build --workspace --feature-powerset --optional-deps --all-targets
      - run: podman system service --time 0 &
      - run: ./run-integration-tests.sh keycloak
      - run: ./run-integration-tests.sh prepare
      - run: RUST_BACKTRACE=1 cargo hack test --workspace --feature-powerset --optional-deps --all-targets
