name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

# only test latest commit on ref
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  rust:
    runs-on: ubuntu-latest # doesn't have a recent enough podman version. we want to avoid docker at all costs because it adds another layer of complexity
    steps:
      - run: sudo usermod --add-subuids 300000-400000 --add-subgids 300000-400000 $USER
      - run: cat /etc/subuid
      - run: NONINTERACTIVE=1 bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      - run: (echo; echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"') >> /home/runner/.bashrc
      - run: eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)" && brew install podman
      - uses: actions/cache@v4
        with:
          path: ~/.local/share/containers/
          key: containers-cache
      - uses: actions/checkout@v4
      - run: eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)" && podman --version
      # what does privileged here affect and can we remove it?
      # -v /run/user/1000/wayland-0:/run/user/1000/wayland-0 # not in CI
      # https://github.com/containers/podman/issues/16541
      # https://www.redhat.com/sysadmin/debug-rootless-podman-mounted-volumes
      # https://www.redhat.com/sysadmin/rootless-podman
      # I think we need to create a custom mapping here to make this work for arbitrary host subuids as the subuids inside of the container are fixed
      - run: eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)" && podman run -it --device /dev/dri --privileged --userns=keep-id:uid=1000,gid=1000 --subuidname podman --subgidname podman -v pga-podman-cache:/home/podman/.local/share/containers -v pga-cargo:/home/podman/.cargo -v pga-target:$PWD/target -v $PWD:$PWD --workdir=$PWD ghcr.io/projektwahl/perfect-group-allocation:1 sh -c ./.github/run.sh
